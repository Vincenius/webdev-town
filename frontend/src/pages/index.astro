---
import { getImage } from "astro:assets";
import Layout from '../layouts/Layout.astro';
import Newsletter from '../components/Newsletter.astro';
import Explore from '../react-components/Explore.jsx';
import { getByQuery, getCount } from '../utils/database';

const today = new Date();
const sevenDaysAgo = new Date();
sevenDaysAgo.setDate(sevenDaysAgo.getDate() - 7);
const query = {
	created_at: {
		$gte: sevenDaysAgo.toISOString(),
		$lte: today.toISOString(),
	}
};
const data = await getByQuery({ query })
const count = await getCount()
const images = import.meta.glob('../assets/content/**/*')
const optimizedImages = await Promise.all(Object.keys(images).map(async key => {
	if (images[key]) {
		const myImage = await images[key]()
		const optimizedImage = await getImage({ src: myImage.default, width: 300 })
		return {
			path: key,
			image: optimizedImage.src,
		}
	} else {
		return {
			path: key,
			image: '/social.png'
		}
	}
}))
---

<Layout title="WebDev Town | A curated list of web development tools, articles, libraries, and resources that gets updated every day.">
	<h2>Discover <span class="text-gradient">{count}</span> Web Development Tools, Articles, Libraries and Resources!</h2>

	<Newsletter />

	<Explore
		optimizedImages={optimizedImages}
		initialData={data}
		initialTotal={count}
		client:load
	/>
</Layout>

<style>
h2 {
		font-size: 3rem;
		font-weight: 700;
		line-height: 1.2;
		text-align: left;
		margin-bottom: 0.75em;
	}
	h2 mark {
		background: var(--accent-gradient);
		color: #fff;
		padding: 0 0.2em;
	}
	/* .button {
		padding: 1.25rem 2rem;
		margin: 2em auto;
		font-size: 1.25rem;
		min-width: 300px;
		height: 100%;
	} */

	@media (max-width: 600px) {
		h2 {
			font-size: 2rem;
		}
	}
</style>
