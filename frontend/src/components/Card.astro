---
interface Props {
	title: string;
	body: string;
	href: string;
	image: string;
	sponsored: boolean;
	favourites: string;
	id: string;
	internal: boolean;
}
import { Image } from 'astro:assets';
const images = import.meta.glob('../assets/**/*')

const { href, title, body, image, sponsored, internal = false, favourites = [] } = Astro.props;
let domain = internal ? href : (new URL(href))
let imagePath = image.replace('/weekly', '../assets');
const myImage = images[imagePath]
	? await images[imagePath]()
	: { default: 'no-image' };
const favouriteCount = favourites.length;
---

<li class="link-card">
	<a href={href} target={internal ? '' : "_blank"} rel={internal ? '' : 'noopener noreferrer'} draggable="false">
		<Image
			src={myImage.default}
			alt={title}
			width={300}
			height={166}
			class="image"
		/>
		<div class="content">
			<div>
				{sponsored && <span class="sponsored">Sponsored</span>}
				<h3>
					{title}
					<span>&rarr;</span>
				</h3>
				<p>
					{body}
				</p>
			</div>
			{ !internal && <p class="host">
				{domain.hostname}
			</p> }
		</div>
	</a>
	<div class="favourite">
		{favouriteCount}
	</div>
</li>
<style>
	.sponsored {
		display: block;
		opacity: 0.6;
		margin-bottom: 0.4em;
		margin-top: -0.6em;
	}

	.favourite {
		position: absolute;
		bottom: 1.6em;
		right: 1.6em;
		width: 32px;
		height: 32px;
		display: block;
		z-index: 2;
		text-align: center;
		font-size: 0.5em;
		line-height: 3em;
		cursor: pointer;
	}

	.favourite:hover {
		color: #23262d;
	}

	.favourite.active:hover {
		color: #fff;
	}

	.favourite::before {
		content: url('data:image/svg+xml; utf8, <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 24 24"><path fill="white" d="m12.1 18.55l-.1.1l-.11-.1C7.14 14.24 4 11.39 4 8.5C4 6.5 5.5 5 7.5 5c1.54 0 3.04 1 3.57 2.36h1.86C13.46 6 14.96 5 16.5 5c2 0 3.5 1.5 3.5 3.5c0 2.89-3.14 5.74-7.9 10.05M16.5 3c-1.74 0-3.41.81-4.5 2.08C10.91 3.81 9.24 3 7.5 3C4.42 3 2 5.41 2 8.5c0 3.77 3.4 6.86 8.55 11.53L12 21.35l1.45-1.32C18.6 15.36 22 12.27 22 8.5C22 5.41 19.58 3 16.5 3Z"/></svg>');
		width: 32px;
		height: 32px;
		display: block;
		position: absolute;
		z-index: -1;
	}

	.favourite:hover::before {
		content: url('data:image/svg+xml; utf8, <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 24 24"><path fill="white" d="m12 21l-1.45-1.3q-2.525-2.275-4.175-3.925T3.75 12.812Q2.775 11.5 2.388 10.4T2 8.15Q2 5.8 3.575 4.225T7.5 2.65q1.3 0 2.475.55T12 4.75q.85-1 2.025-1.55t2.475-.55q2.35 0 3.925 1.575T22 8.15q0 1.15-.388 2.25t-1.362 2.412q-.975 1.313-2.625 2.963T13.45 19.7L12 21Z"/></svg>');
	}

	.favourite.active::before {
		content: url('data:image/svg+xml; utf8, <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 24 24"><path fill="rgba(183,28,28)" d="m12 21l-1.45-1.3q-2.525-2.275-4.175-3.925T3.75 12.812Q2.775 11.5 2.388 10.4T2 8.15Q2 5.8 3.575 4.225T7.5 2.65q1.3 0 2.475.55T12 4.75q.85-1 2.025-1.55t2.475-.55q2.35 0 3.925 1.575T22 8.15q0 1.15-.388 2.25t-1.362 2.412q-.975 1.313-2.625 2.963T13.45 19.7L12 21Z"/></svg>');
	}
</style>

<script>
  import party from "party-js";

	const getFavs = () => {
		const storedFavs = localStorage.getItem('favourites');
		const favs = JSON.parse(storedFavs) || [];
		return favs
	}

	const initFavs = getFavs();
	initFavs.forEach(element => {
		console.log('yoyo', element)
		// todo mark as active
	});

	const buttons = document.querySelectorAll('.favourite');
  buttons.forEach((button) => {
		button.addEventListener("click", function (e) {
			party.confetti(this);
			button.classList.toggle('active')
			console.log(this.dataset)
			// const prevFavs = getFavs()
			// localStorage.setItem('favourites', JSON.stringify(
			// 	// [...prevFavs]
			// ))
			// TODO database
			button.innerHTML = '1'
		});
  });
</script>